name: Mobile

on:
  pull_request:
    paths:
      - "lib/**"
      - "test/**"
      - "android/**"
      # Ignore iOS for now
      #  - "ios/**"
      - "pubspec.*"
      - "protos/**"
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "lib/**"
      - "test/**"
      - "android/**"
      # Ignore iOS for now
      #  - "ios/**"
      - "pubspec.*"
      - "protos/**"

permissions:
  contents: read
  pull-requests: read

jobs:
  determine_build:
    name: Determine tests to run
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    outputs:
      tests: ${{ steps.changes.outputs.test }}

    steps:
      - id: changes
        name: Paths Changes Filter
        uses: dorny/paths-filter@v2.11.1
        with:
          filters: |
            tests:
              - "lib/**"
              - "test/**"
              - "android/**"
              - "pubspec.*"
              - "protos/**"

  tests:
    name: Android Tests
    runs-on: ubuntu-latest
    needs: determine_build
    if: github.event_name == 'pull_request' && needs.determine_build.outputs.tests == 'true'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.12"
          channel: "stable"

      - name: Install Dependencies
        run: flutter pub get

      - name: Linting
        run: flutter analyze

  android_build:
    name: Android Mobile Build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "12.x"

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.13.0"
          channel: "stable"

      - name: Add Github signer properties file
        id: exc_github_signer_properties
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: "key.properties"
          fileDir: "android"
          encodedString: ${{ secrets.EXC_GITHUB_SIGNER_PROPERTIES }}

      - name: Add Github signer keystore
        id: exc_github_signer_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileDir: "android/app"
          fileName: "github-keystore.jks"
          encodedString: ${{ secrets.EXC_GITHUB_SIGNER_KEYSTORE }}

      - name: Install Dependencies
        run: flutter pub get

      - name: Install protobuf
        run: sudo apt install protobuf-compiler

      - name: Install Dart protoc plugin
        run: dart pub global activate protoc_plugin

      - name: Generate protos
        run: scripts/generate_protos.sh

      - name: Build Android app
        run: flutter build apk

      - name: "Tar files"
        run: tar -cvf artifacts.tar build/app/outputs/flutter-apk/*.apk

      - name: Upload Android apk
        uses: actions/upload-artifact@v3
        with:
          name: artifacts
          path: artifacts.tar
          retention-days: 1

  android_staging_deploy:
    name: Android Mobile Deploy
    needs: android_build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifacts

      - name: Untar Artifacts
        run: tar -xvf artifacts.tar

      - id: auth
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXCEL_ACADEMY_ONLINE }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - id: message
        name: Get commit message
        run: echo message=$(git tag -l --format='%(contents)'${REF}) >> "$GITHUB_OUTPUT"
        env:
          REF: ${{ github.event.push.after }}

      - name: Install firebase
        run: npm install -g firebase-tools

        # Deploy to only staging users
      - name: Deploy Android app to Firebase app distribution
        env:
          message: ${{ steps.message.outputs.message }}
        run: |
          firebase appdistribution:distribute build/app/outputs/flutter-apk/app-release.apk \
              --project=excel-academy-mobile \
              --app 1:1027112230279:android:7d45ccd3b9d0f816f9c722 \
              --release-notes "$message" \
              --groups "staging, admin"
